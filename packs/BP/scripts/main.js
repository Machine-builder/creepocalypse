import { world as u } from "@minecraft/server"; u.afterEvents.entityHurt.subscribe(function (e) { try { if (Math.random() < .3) { let t = e.hurtEntity; if (t.getProperty("cpoc:headless")) return; let n = t.dimension, o = t.getHeadLocation(), c = t.getRotation(); t.triggerEvent("cpoc:become_headless"); let i = n.spawnEntity("cpoc:bonehead_head", { x: o.x, y: o.y - .5, z: o.z }); i.setRotation(c); let r = c.y / 180 * Math.PI, y = Math.sin(r), s = -Math.cos(r); i.applyKnockback(y, s, .6, .5) } } catch { } }, { entityTypes: ["cpoc:bonehead"] }); import { EntityDamageCause as d, world as f } from "@minecraft/server"; f.afterEvents.entityHurt.subscribe(function (e) { if (e.hurtEntity.typeId !== "cpoc:sandstreak") return; let t = e.damageSource.damagingEntity; if (t === void 0 || Math.random() > .6) return; let n = Math.ceil(e.damage * .2); try { t.applyDamage(n, { cause: d.contact, damagingEntity: e.hurtEntity }) } catch { } }); import { EntityHealthComponent as g, EntityIsStunnedComponent as m, TicksPerSecond as h, system as l } from "@minecraft/server"; var p = class { constructor() { this.callbacks = [] } subscribe(t) { this.callbacks.push(t) } trigger(t) { for (let n of this.callbacks) n(t) } }; var a = new p; function b(e) { return e.getComponent(g.componentId)?.currentValue ?? 0 > 0 } l.afterEvents.scriptEventReceive.subscribe(e => { if (e.id == "cpoc:start_exploding") { let t = e.sourceEntity; if (t === void 0) return; l.runTimeout(() => { if (t.hasComponent(m.componentId) && b(t)) { let n = t.location, o = t.dimension; l.runTimeout(() => { (!t.isValid() || t.hasComponent(m.componentId)) && a.trigger({ entity: t, location: n, dimension: o }) }, 1) } }, (e.message.length > 0 ? parseFloat(e.message) : 1.5 * h) - 1) } }); a.subscribe(function (e) { e.entity.typeId }); import { EntityInitializationCause as E, world as v } from "@minecraft/server"; a.subscribe(function (e) { e.entity.typeId === "cpoc:timberling" && e.dimension.spawnEntity("cpoc:timberling_blast", { x: e.location.x, y: e.location.y + 1.2, z: e.location.z }) }); v.afterEvents.entitySpawn.subscribe(function (e) { if (e.entity.typeId !== "cpoc:timberling_splinter" || e.cause !== E.Event) return; let t = e.entity, n = Math.random() * Math.PI * 2, o = Math.sin(n), c = -Math.cos(n), i = (Math.random() - .5) * 1.5; try { t.applyImpulse({ x: o, y: i, z: c }) } catch { } }); import { system as x } from "@minecraft/server"; x.afterEvents.scriptEventReceive.subscribe(e => { if (e.id == "cpoc:tick") { let t = e.sourceEntity; if (t?.typeId !== "cpoc:rampage" || !(t.getProperty("cpoc:has_target") ?? !1)) return; let o = t.getVelocity(), c = !(Math.abs(o.x) < .025 && Math.abs(o.z) < .025); if (t.getDynamicProperty("cpoc:is_still") ?? !1) { let i = t.getDynamicProperty("cpoc:still_location") ?? { x: 0, y: 0, z: 0 }, r = t.location; if (!(Math.abs(i.x - r.x) < 1 && Math.abs(i.z - r.z) < 1)) t.setDynamicProperty("cpoc:is_still", void 0), t.setDynamicProperty("cpoc:still_timer", 0); else { let s = t.getDynamicProperty("cpoc:still_timer") ?? -1; if (s++, t.setDynamicProperty("cpoc:still_timer", s), s > 3) { t.dimension.spawnEntity("cpoc:rampage_instant_explosion", t.location), t.remove(); return } } } else c || (t.setDynamicProperty("cpoc:is_still", !0), t.setDynamicProperty("cpoc:still_location", t.location)) } });
